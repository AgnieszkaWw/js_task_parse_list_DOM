{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAS,SAAS,gBAAgB,CAAC,MACnC,EAAa,SAAS,aAAa,CAAC,MACpC,EAAc,EAAE,EAkBtB,AAhBA,WACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAhB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAwB,CAAxB,IAAM,EAAN,EAAA,KAAA,CACG,EAAQ,EAAO,SAAS,CACxB,EAAW,EAAO,YAAY,CAAC,iBAC/B,EAAS,EAAO,YAAY,CAAC,eAC7B,EAAM,EAAO,YAAY,CAAC,YAEhC,EAAY,IAAI,CAAC,CACf,KAAM,EACN,SAAA,EACA,OAAA,EACA,IAAA,CACF,EACF,C,C,M,E,CAZK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAaP,IAgBA,AAZA,WACE,IAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAY,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,EAAA,I,A,W,M,A,U,wI,IAElB,EAAM,IAAI,CAAC,SAAC,CAAA,CAAS,CAArB,EACE,OAAA,SAAS,EAAQ,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IACpC,SAAS,EAAQ,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,G,GAErC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAhB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAW,MAAM,CAAC,E,C,C,M,E,CADf,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,G,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar people = document.querySelectorAll(\"li\");\nvar peopleList = document.querySelector(\"ul\");\nvar peopleArray = [];\nfunction getEmployees() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = people[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var person = _step.value;\n            var namee = person.innerText;\n            var position = person.getAttribute(\"data-position\");\n            var salary = person.getAttribute(\"data-salary\");\n            var age = person.getAttribute(\"data-age\");\n            peopleArray.push({\n                name: namee,\n                position: position,\n                salary: salary,\n                age: age\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\ngetEmployees();\nfunction sortList() {\n    var copyP = _to_consumable_array(people);\n    copyP.sort(function(personA, personB) {\n        return parseInt(personB.dataset.salary.slice(1)) - parseInt(personA.dataset.salary.slice(1));\n    });\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = copyP[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var person = _step.value;\n            peopleList.append(person);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nsortList();\n\n//# sourceMappingURL=index.5a004d61.js.map\n","'use strict';\n\nconst people = document.querySelectorAll('li');\nconst peopleList = document.querySelector('ul');\nconst peopleArray = [];\n\nfunction getEmployees() {\n  for (const person of people) {\n    const namee = person.innerText;\n    const position = person.getAttribute('data-position');\n    const salary = person.getAttribute('data-salary');\n    const age = person.getAttribute('data-age');\n\n    peopleArray.push({\n      name: namee,\n      position,\n      salary,\n      age,\n    });\n  }\n}\n\ngetEmployees();\n\nfunction sortList() {\n  const copyP = [...people];\n\n  copyP.sort((personA, personB) =>\n    parseInt(personB.dataset.salary.slice(1))\n    - parseInt(personA.dataset.salary.slice(1)));\n\n  for (const person of copyP) {\n    peopleList.append(person);\n  }\n}\n\nsortList();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","people","document","querySelectorAll","peopleList","querySelector","peopleArray","getEmployees","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","person","value","namee","innerText","position","getAttribute","salary","age","push","name","err","return","sortList","copyP","_array_without_holes","isArray","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","test","_non_iterable_spread","TypeError","sort","personA","personB","parseInt","dataset","append"],"version":3,"file":"index.5a004d61.js.map"}